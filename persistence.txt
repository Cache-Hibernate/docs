*** (Вопросы на интервью по технологиям Java Spring и Hibernate ** Объясните суть паттерна DI или IoC) http://j4sq.blogspot.com/2012/01/java-spring-hibernate.html
    (Lambda architecture) http://en.wikipedia.org/wiki/Lambda_architecture


http://stoflru.org/questions/26132940/what-are-the-difference-between-jpas-entitymanager-and-hibernates-first-level
------------------------------------------------------------------------------------------------------------------------[  ]
"JPA" - это интерфейс, который реализуется с помощью других ORM.
Эти - "ORM" (Object Relational Mapping) - выступают в качестве поставщика для этого, это способ сохранения объектов в реляционную базу данных.

"Entity Manager" - является частью спецификации JPA для выполнения доступа к базе данных с помощью управляемых объектов.
"Hibernate"      - это один из самых популярных на сегодняшний день ORM-фреймворков
"Hibernate" кэш-памяти первого уровня-cache - чтобы вернуть кэшированные <hibernate лиц>.



http://www.spring-source.ru/docs_simple.php?type=manual&theme=docs_simple&docs_simple=chap03_p03
========================================================================================================================[ Java Persistence Tools ]
1. Интерфейс Persistence – по сути это класс. В нем практически нет методов, кроме пары статических. Один из них CreateEntityManagerFactory, то есть он создает EntityManagerFactory. Что он принимает на вход: persistence unit. По сути, он ищет percistance (конфигурацию), считывает ее и создает EntityManagerFactory на основе конфигурации. Здесь мы определяем к какой базе данных будем соединяться, логин, пароль и самое главное, в конфигурации определяется провайдер (какая конкретная реализация JPA будет использоваться). EntityManagerFactory – это интерфейс, реализация которого и есть провайдер.

2. EntityManagerFactory – это фабрика, которая содержит connection к базе, всю конфигурацию, кэш объекты итд. Суть фабрики – создавать EntityManager.

3. EntityManager – это менеджер сущностей. Он определяет сеанс взаимодействия с базой данных (один сеанс). Когда, например, нужно выполнить запрос, то мы создаем EntityManager, выполняем нужное действие, закрываем EntityManager.

Объекты EntityManager очень леговесные. Можно создавать их сколько угодно. По сути, здесь просто открывается подключение к базе днных. Может даже соединение уже будет открыто и он присоединиться к текущему.
EntityManagerFactory – фабрика и она создается долго (иницилизация всех сущностей, сканируются все классы, считываются аннотации, определяются связи итд). Поэтому фабрика должна быть одна (в основном это так). На одну базу одна фабрика.

Для чего созаны EntityManager? В нем есть один объект, который называется EntityTransaction (это интерфейс). Он определяет три метода. Begin (стартует транзакцию), commit, rollback. Также EntityManager может содержать несколько объектов Query, по сути, он их создает.

4. EntityManager содержит несколько Entity. Все Entity, которые загружаются из базы данных, например get name, будут висеть постоянно в памяти, то есть EntityManager содержит кэш этих маленьких объектов и пока EntityManager мы не закрыли, последующее обращение (get name) не полезет в базу данных.

Если рассматривать hibernate, то там есть два уровня кэша: первый – EntityManager, второй кэш - это EntityManagerFactory.
